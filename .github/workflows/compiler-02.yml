name: compiler 10001>20000

# Controls when the workflow will run
on:
  workflow_dispatch:
  
  # push:
  #   branches: [ "*" ]
  
  # repository_dispatch:
  #   types:
  #     - webhook
  #     - '**'
  
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      #- name: Prepare Upload
        #shell: bash
        #run: |
          #echo "## ssh setup"
          #mkdir -p /home/runner/.ssh
          #touch /home/runner/.ssh/id_ed25519
          #chmod 600 /home/runner/.ssh/id_ed25519
          ##ssh-agent -a /tmp/ssh_agent.sock > /dev/null
      
      
      #- name: Push to Repo
        #shell: bash
        #run: |
          #echo "${{ secrets.XIVASTUDIO_SOURCEFORGE_KEY }}" >> /home/runner/.ssh/id_ed25519
          #ssh-keyscan -t ed25519 shell.sourceforge.net > /home/runner/.ssh/known_hosts
       
      - name: Get Blender
        shell: bash
        run: |
          wget https://mirror.clarkson.edu/blender/release/Blender3.3/blender-3.3.1-linux-x64.tar.xz
          tar -xvf blender-3.3.1-linux-x64.tar.xz
          
      - name: Compile
        shell: bash
        run: |
          git clone https://github.com/gitbarnabedikartola/teste-blender.git
          mkdir -p teste-blender/cronometro
          cd teste-blender/cronometro
          wget https://github.com/${{ github.repository }}/releases/download/0.0.1/59seg.mkv
          wget https://github.com/${{ github.repository }}/releases/download/0.0.1/5min.mkv
          wget https://github.com/${{ github.repository }}/releases/download/0.0.1/10min.mkv
          mkdir -p render-animação/mint/
          cd render-animação/mint/
          wget https://github.com/${{ github.repository }}/releases/download/0.0.1/base.mkv
          cd ../..
          
          cd ..
          ../blender-3.3.1-linux-x64/blender -b big-vs-mint-v4.blend -noaudio -o // -S video -s 10001 -e 20000 -a
          
      - name: push to git releases
        shell: bash
        run: |
          echo ${{ github.token }} | gh auth login --with-token
          # gh release create 0.0.1 --title cronometro --repo gitbarnabedikartola/teste-blender --notes "notas"
          cd teste-blender
          for i in *.mkv; do
            gh release upload 0.0.1 --repo ${{ github.repository }} --clobber $i
          done
          
      #  # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
        
      #- name: Telegram Alert Start
        #shell: bash
        #run: |
          #echo ${{ github.repository }}
          #curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID_TESTE }}", "text": "Criando pacote: ${{ github.workflow }} Enviado por':' ${{ github.actor }} https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "disable_notification": true}' ${{ secrets.MESSAGE_BOT_KEY }}
